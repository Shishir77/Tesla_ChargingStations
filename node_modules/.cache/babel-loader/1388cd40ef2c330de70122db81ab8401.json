{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16822\\\\Desktop\\\\Final Semester\\\\Senior Design\\\\Leaftlet_React\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'; //import logo from './logo.svg';\n\nimport './App.css';\nimport teslaData from \"./data/tesla-sites.json\";\nimport L from \"leaflet\"; // Used to fetch remote data\n\nimport useSwr from \"swr\"; // Used to cluster points\n\nimport useSupercluster from \"use-supercluster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar myIcon = L.divIcon({\n  className: 'icon-style'\n}); // you can set .my-div-icon styles in CSS\n\nL.marker([50.505, 30.57], {\n  icon: myIcon\n}).addTo(map);\n\nfunction App() {\n  const filteredStations = teslaData.filter(tsla => tsla.address.state === \"TX\");\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [31.169621, -99.683617],\n    zoom: 6,\n    scrollWheelZoom: true,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), filteredStations.map(tsla => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [tsla.gps.latitude, tsla.gps.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        position: [tsla.gps.latitude, tsla.gps.longitude],\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Name: \" + tsla.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Status:\" + tsla.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No.of charging stations:\" + tsla.stallCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, tsla.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/16822/Desktop/Final Semester/Senior Design/Leaftlet_React/my-app/src/App.js"],"names":["React","MapContainer","TileLayer","Marker","Popup","teslaData","L","useSwr","useSupercluster","myIcon","divIcon","className","marker","icon","addTo","map","App","filteredStations","filter","tsla","address","state","gps","latitude","longitude","name","status","stallCount","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,eAAvD,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,CAAP,MAAc,SAAd,C,CACA;;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,kBAA5B;;AAGA,IAAIC,MAAM,GAAGH,CAAC,CAACI,OAAF,CAAU;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAV,CAAb,C,CACA;;AAEAL,CAAC,CAACM,MAAF,CAAS,CAAC,MAAD,EAAS,KAAT,CAAT,EAA0B;AAACC,EAAAA,IAAI,EAAEJ;AAAP,CAA1B,EAA0CK,KAA1C,CAAgDC,GAAhD;;AAEA,SAASC,GAAT,GAAe;AAGb,QAAMC,gBAAgB,GAAGZ,SAAS,CAACa,MAAV,CAAiBC,IAAI,IAAIA,IAAI,CAACC,OAAL,CAAaC,KAAb,KAAqB,IAA9C,CAAzB;AACA,sBACE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAE,CAAC,SAAD,EAAY,CAAC,SAAb,CAAtB;AAA+C,IAAA,IAAI,EAAE,CAArD;AAAwD,IAAA,eAAe,EAAE,IAAzE;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,WAAW,EAAC,yFADd;AAEE,MAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA,YADF,EAMGJ,gBAAgB,CAACF,GAAjB,CAAqBI,IAAI,iBACxB,QAAC,MAAD;AAAwB,MAAA,QAAQ,EAAE,CAACA,IAAI,CAACG,GAAL,CAASC,QAAV,EAAoBJ,IAAI,CAACG,GAAL,CAASE,SAA7B,CAAlC;AAAA,6BAEE,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,CAACL,IAAI,CAACG,GAAL,CAASC,QAAV,EAAoBJ,IAAI,CAACG,GAAL,CAASE,SAA7B,CAAjB;AAAA,+BACE;AAAA,kCACE;AAAA,sBAAK,WAAUL,IAAI,CAACM;AAApB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAI,YAAUN,IAAI,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAI,6BAA2BP,IAAI,CAACQ;AAApC;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF,OAAeR,IAAI,CAACS,EAApB;AAAA;AAAA;AAAA;AAAA,YADD,CANH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;KA5BQZ,G;AA8BT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\n//import logo from './logo.svg';\nimport './App.css';\nimport teslaData from \"./data/tesla-sites.json\"\nimport L from \"leaflet\";\n// Used to fetch remote data\nimport useSwr from \"swr\";\n// Used to cluster points\nimport useSupercluster from \"use-supercluster\";\n\n\nvar myIcon = L.divIcon({className: 'icon-style'});\n// you can set .my-div-icon styles in CSS\n\nL.marker([50.505, 30.57], {icon: myIcon}).addTo(map);\n\nfunction App() {\n\n\n  const filteredStations = teslaData.filter(tsla => tsla.address.state===\"TX\")\n  return (\n    <MapContainer center={[31.169621, -99.683617]} zoom={6} scrollWheelZoom={true}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n\n      {filteredStations.map(tsla => ( \n        <Marker key = {tsla.id} position={[tsla.gps.latitude, tsla.gps.longitude]}>\n\n          <Popup position={[tsla.gps.latitude, tsla.gps.longitude]}>\n            <div>\n              <h2>{\"Name: \"+ tsla.name}</h2>\n              <p>{\"Status:\"+tsla.status}</p>\n              <p>{\"No.of charging stations:\"+tsla.stallCount}</p>\n            </div>\n            </Popup>\n            </Marker>\n\n\n      ))}\n\n    </MapContainer>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}